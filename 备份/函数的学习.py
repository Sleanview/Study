'''
什么是函数：即一系列Python语句的组合，可以在程序中运行一次或者多次，
一般是完成具体独立的功能
为什么使用函数
代码的复用最大化以及最小化冗余代码，整体代码结构清晰，问题局部化

函数定义：def + 关键字 + 小括号 + 冒号 + 换行缩进 + 代码块    定义一个函数
Def 函数名( ):
       代码块
调用：函数名加（ ）即可调用该函数
'''
# print('小张的身高是%f'%1.73)
# print('小张的体重是%f'%160)
# print('小张的爱好是%s'%'唱歌')
# print('小张的专业是%s'%'计算机信息管理')
# 处理其他的逻辑信息
# 多次去打印出小张的信息
# print('-------------多次打印相同的信息-------------')
# print('小张的身高是%f'%1.73)
# print('小张的体重是%f'%160)
# print('小张的爱好是%s'%'唱歌')
# print('小张的专业是%s'%'计算机信息管理')
# # 针对上面的场景 就需要进一步的去优化代码 【方案：封装函数】
# 函数的定义
# def 函数名(参数列表):0-n 个参数
# 代码块

def printInfo():
    '''
    这个函数是用来打印个人信息的 是小张信息显示的组合
    :return:
    '''
    # 函数代码块
    print('小张的身高是%f' % 1.73)
    print('小张的体重是%f' % 160)
    print('小张的爱好是%s' % '唱歌')
    print('小张的专业是%s' % '计算机信息管理')
    pass
# 函数的调用
# printInfo() # 函数的调用
# printInfo() # 多次调用
# printInfo() # 按住crtl，鼠标移动到函数名上可看到
# print('我是其它的代码块。。。')
# 进一步的去完善这样的需求【输出不同人的信息】 方案：通过传入参数来解决
def printInfo(name,height,weight,hobby,pro):
    # 函数代码块
    print('%s的身高是%f' % (name,height))
    print('%s的体重是%f' % (name,weight))
    print('%s的爱好是%s' % (name,hobby))
    print('%s的专业是%s' % (name,pro))
    pass

# 调用带参数的信息
printInfo('小李',189,200,'打游戏','咨询师')
print('---------------带函数的调用-----------------')
printInfo('Glados',169,60,'做实验','人工智能')